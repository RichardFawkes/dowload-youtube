from pytubefix import YouTube
from pytubefix.cli import on_progress

# URL do v√≠deo
url = 'https://www.youtube.com/watch?v=uKpGSdIWRqk'

# Cria o objeto YouTube com callback de progresso
yt = YouTube(url, on_progress_callback=on_progress)

print(f"T√≠tulo: {yt.title}")
print("Resolu√ß√µes dispon√≠veis:")

# Mostra todas as resolu√ß√µes dispon√≠veis
all_streams = yt.streams.filter(file_extension='mp4').order_by('resolution').desc()
for stream in all_streams:
    print(f"- {stream.resolution} ({'Progressivo' if stream.is_progressive else 'Adaptativo'}) - {stream.mime_type}")

# Remove caracteres inv√°lidos do nome do arquivo
safe_filename = "".join(c for c in yt.title if c.isalnum() or c in (' ', '-', '_')).rstrip()

print("\n--- Tentando baixar na melhor qualidade ---")

# Estrat√©gia 1: Tenta streams progressivos primeiro (mais simples)
stream = yt.streams.filter(progressive=True, file_extension='mp4').order_by('resolution').desc().first()
if stream and int(stream.resolution.replace('p', '')) >= 720:
    print(f"‚úì Encontrado stream progressivo em {stream.resolution}")
    print(f"Baixando: {yt.title} em {stream.resolution}")
    stream.download(output_path='.', filename=safe_filename + ".mp4")
    print("Download conclu√≠do!")
else:
    # Estrat√©gia 2: Usa get_highest_resolution (pode n√£o ser progressivo)
    print("Stream progressivo de alta qualidade n√£o dispon√≠vel.")
    print("Tentando baixar a maior resolu√ß√£o dispon√≠vel...")
    
    stream = yt.streams.get_highest_resolution()
    if stream:
        print(f"‚úì Baixando em {stream.resolution} (pode ser s√≥ v√≠deo ou s√≥ √°udio)")
        stream.download(output_path='.', filename=safe_filename + "_" + stream.resolution + ".mp4")
        print("Download conclu√≠do!")
        
        # Se n√£o for progressivo, tenta baixar √°udio separadamente
        if not stream.is_progressive:
            print("Baixando √°udio separadamente...")
            audio_stream = yt.streams.filter(only_audio=True).order_by('abr').desc().first()
            if audio_stream:
                audio_stream.download(output_path='.', filename=safe_filename + "_audio.mp4")
                print("√Åudio baixado! Para combinar v√≠deo e √°udio, instale o FFmpeg.")
    else:
        print("‚ùå N√£o foi poss√≠vel encontrar streams de alta qualidade.")
        # Fallback para qualquer stream dispon√≠vel
        stream = yt.streams.filter(progressive=True, file_extension='mp4').first()
        if stream:
            print(f"Baixando em {stream.resolution} (√∫nica op√ß√£o dispon√≠vel)")
            stream.download(output_path='.', filename=safe_filename + ".mp4")
            print("Download conclu√≠do!")

print("\nüìù Dica: Para baixar sempre em 1080p com v√≠deo+√°udio combinados,")
print("   feche este terminal, abra um novo e execute o script novamente.")
print("   O FFmpeg j√° foi instalado e estar√° dispon√≠vel no novo terminal!")
